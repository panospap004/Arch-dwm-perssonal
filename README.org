* READ THE COMPLETE README OR YOU WILL HAVE ISSUES
* Initial step 
when isntalling arch with arch installer, in the options 
  1. loginmanager use sddm
  2. filesystem use ext4
  3. profile desktop i recommend gnome as backup in case something beaks and for initial setup plus parts of it are being used in later scripts
  4. bootloader use grub
  5. audio profile pipewire
  6. kernals , linux and if you are in nvidia gpu use linux-zen else linux-lts
  7. aditional packages git, base-devel, vivaldi(personal choice), neovim, fish, networkmanager, yazi, kitty, ttf-jetbrains-mono-nerd, ripgrep, gcc, make, xorg-xinput, dmenu, brightnessctl
  8. if you have multiple monitors i recomend arandr, xrandr 
* After initial step is finished and you rebooted 
  1. Enable networkmanager with ~sudo systemctl enable --now NetworkManager.service~
  2. enable pipewire for audio with 
     - ~sudo systemctl enable --now pipewire pipewire-pulse.socket~
     - ~sudo systemctl start pipewire pipewire-pulse.socket~
       * if this commands dont work try but you might need to redo it in dwm later again
         - ~systemctl --user enable pipewire pipewire-pulse~
         - ~systemctl --user start pipewire pipewire-pulse~
  3. Check your locals in case its wrong and if you enabled multilib with the following commands
     - ~sudo nvim /etc/locale.gen~ for me its  el_GR.UTF-8 UTF-8
     - ~sudo locale-gen~
     - ~sudo nvim /etc/pacman.conf~ uncomment multilib
     - ~sudo pacman -Syu~
  4. Change to fish shell with ~chsh -s /usr/bin/fish~
  5. make a git dir with ~mkdir ~/git~ #optional just to keep your git clonses organized
  6. now install all the following packages that are being used in either dwm or scripts or somewhere in the congigs
     - starting with yay the aur helper 
         * cd ~/git/
         * ~git clone https://aur.archlinux.org/yay.git~
         * ~cd yay~
         * ~makepkg -si~
         * if for soem reason it dodesnt work go out of the yay directory make a new yay-n dir cp all the yay conters for the initial one to the new one and then run makepkg -si there
     - now for the packages 
  #+begin_src shell
    yay
    sudo pacman -S curl thunar dolphin polybar feh libinput wmctrl xdotool dunst libnotify rofi mpd mpc mpv cmake python python-pip python-setuptools python-wheel pkgconf libayatana-appindicator man dbus libxrandr libxss pango yad pamixer gvfs-mtp gvfs-gphoto2 playerctl mpv-mpris mpd-mpris jq pulseaudio slop ffmpeg libx11 libxfixes fzf sxiv translate-shell mupdf easyeffects wildmidi timidity++ arch-wiki-docs iputils nsxiv python-pipx xclip imagemagick yt-dlp yelp xcolor brightnessctl pavucontrol
    yay -S didyoumean-bin libinput-gestures xautolock caffeine-ng libayatana-application-glib menu-qalc rofi-calc greenclip-rofi youtube-dl 
    
    adobe-source-code-pro-fonts 
    noto-fonts-emoji
    otf-font-awesome 
    ttf-droid 
    ttf-fira-code
    ttf-jetbrains-mono 
    ttf-jetbrains-mono-nerd 
  yay -S ttf-gabarito-git
  yay -S ttf-material-symbols-variable-git
  yay -S ttf-readex-pro
  yay -S ttf-rubik-vf
  yay -S ttf-space-mono-nerd
  noto-fonts
  noto-fonts-cjk
  noto-fonts-emoji
  ttf-dejavu
  ttf-liberation
  ttf-fira-sans
  ttf-droid
  ttf-ubuntu-font-family
  ttf-hack
  noto-fonts
  noto-fonts-cjk
  noto-fonts-emoji
  ttf-dejavu
  ttf-liberation
  ttf-fira-sans
  ttf-droid
  ttf-ubuntu-font-family
  ttf-hack fcitx5

    thunar 
    thunar-volman 
    tumbler
    ffmpegthumbnailer 
    thunar-archive-plugin
    xarchiver

  bluez
  bluez-utils
  blueman
  blueberry
  bluedevil

  sudo pacman -S axel coreutils ddcutil fontconfig gammastep
  electon25-bin
  electon33-bin
  electon34-bin
  electon35-bin
  electon36-bin
  electon37-bin

    qt5ct
    qt5-graphicaleffects
    qt5-quickcontrols
    qt5-quickcontrols2
    qt6ct
    qt6-svg
    qt6-5compat 
    qt6-declarative 
    kvantum
    gsettings-desktop-schemas
    gsettings-system-schemas
    gsfonts
    fcitx5
    fcitx5-mozc
    fcitx5-rime
    fcitx5-configtool
  	
    tectonic
    linux-headers
    linux-firmware
    linux
    exfatprogs
    evtest
    efibootmgr
    dosfstools
    dhcpcd
    poppler
    libretro-core-info
    grim
    wireplumber
    xdg-desktop-portal
    alsa-lib
    mesa
    libx11
    libxrandr
    libxi
    libxcursor
    libxinerama
    tlp
    alsa-lib
    mesa
    libx11
    libxrandr
    libxi
    libxcursor
    libxinerama
    appimagelauncher
    gnome-network-displays
  #+end_src
  7. now also install the folowing cursor theme , icon theme and font or you will have to manualy edit several stuff later
     - cursor theme ~yay -S vimix-cursors~
     - font look at the how to edit config.mk you need the monaspaceRadon NF at least 
     - icon pack https://github.com/4e6anenk0/Rowaita-icon-theme
  8. setup nvim with nvchad with to work with accept if you have your own config
     - ~git clone https://github.com/NvChad/starter ~/.config/nvim && nvim~
  9. now copy my dwm, slock and st from the config folder ou want for either desktop or laptop to your .config and run ~sudo make clean install~ for each dir like i explain bellow for a pure dwm install *do not git clone them tho in the part bellow if you are going to use my configs only to the sudo make install part*
  10. now if you instead want a pure start then git clone dwm, slock and st with {st is not required but nice to have as a backup terminal} {if you are using mine dwm and download them from here and place those in the config}
     - ~git clone https://git.suckless.org/dwm ~/.config/dwm~
     - ~git clone https://git.suckless.org/slock ~/.config/slock~
     - ~git clone https://git.suckless.org/st ~/.config/st~
     - now go to the dwm, slock and st dir and run ~sudo make clean install~
  11. now create the sddm xsession file with 
     - ~sudo nvim /usr/share/xsessions/dwm.desktop~
     - paste this in the file 
  #+begin_src shell
  [Desktop Entry]
  Encoding=UTF-8
  Name=DWM
  Comment=Dynamic Window Manager
  # Exec=dwm
  Exec=/usr/local/bin/startdwm.sh # use script to set a wallpaper brefore dwm and other stuff
  Icon=dwm
  Type=XSession

  #+end_src
  * script example
  #+begin_src shell
  #!/bin/sh

  # Fixed function name
  cleanup() {
      pkill -f polybar
      exit 0
  }

  trap cleanup TERM INT

  # Background setup
  # feh --bg-scale ~/Pictures/a.png # if you want to specify a wallpaper
  wal -R # if you use pywal to restore your theme and wallpaper
  # you can use both wal and feh if you are using the wal script that skips setting the wallpaper bound to mainmod+shift+w
  setxkbmap -layout us,gr -option 'grp:alt_shift_toggle' 
  xset r rate 300 50

  #xlock
  xautolock -time 10 -locker slock -detectsleep &
  # time in minutes
  # if you want to disable it use 
  # xautolock -disable &
  # or toggle 
  # xautolock -toggle &

  picom &

  # Function to start polybar with retry logic
  start_polybar() {
      # Kill any existing polybar instances
      pkill -f polybar 2>/dev/null
      sleep 0.2
      
      # Start polybar in background
      # polybar &
      # Alternative: use your themed polybar
      # ~/git/polybar-collection/launch.sh &
      # ~/.config/polybar/launch.sh --blocks &

      # Method 1: Auto-detect and launch on all monitors
      if type "xrandr" > /dev/null; then
          # Get all connected monitors
          for monitor in $(xrandr --query | grep " connected" | cut -d" " -f1); do
              MONITOR=$monitor ~/.config/polybar/launch.sh --blocks &
          done
      else
          # Fallback to single monitor
          ~/.config/polybar/launch.sh --blocks &
      fi
      
      # Method 2: Manual monitor specification (uncomment and modify as needed)
      # MONITOR=DP-1 ~/.config/polybar/launch.sh --blocks &
      # MONITOR=HDMI-A-1 ~/.config/polybar/launch.sh --blocks &
      # MONITOR=eDP-1 ~/.config/polybar/launch.sh --blocks &

  }

  # Start polybar initially
  start_polybar

  # DWM loop with polybar management
  while true; do
      # Start DWM and capture its exit code
      dwm 2> ~/.dwm.log
      # Otherwise, restart polybar and continue
      echo "DWM crashed with exit code $exit_code, restarting..." >> ~/.dwm.log
      start_polybar
      sleep 1
  done

  # Cleanup on exit
  cleanup

  #+end_src
  * and dont forget to ~chmod +x /usr/local/bin/startdwm.sh~ else it wont run
  12. *if you are using my config you can skip this step* then go to .config/dwm/config.h and edit the keybinds and font size i recomend for 
     - font size 12-18 depending on your screen size
     - change Mod1Mask to Mod4Mask (super/windows key) check the modkeys in the terminal with ~xmodmap~
     - create a ~static const chat *term[] = { "kitty", NULL };~ to open terminal with super+enter
     - make/edit keybinds for
       * ~{ MODKEY,                       XK_Return,      spawn,          {.v = term } },~ to open kitty terminal
       * ~{ MODKEY,                       XK_z,          zoom,          {0} },~ change the zoom key
       * ~{ MODKEY,                       XK_q,          killclient,          {0} },~ to close a window
       * ~{ MODKEY,ShiftMask              XK_q,          quit,          {0} },~ kill key to exit dwm when you make changes
     - if you used the script then instead of the modkey,shift q quit do this 
       * ~{ MODKEY,ShiftMask            XK_r,          quit,          {0} },~ restart dwm changes 
       * ~{ MODKEY,ShiftMask            XK_q,          spawn,          {.v = (const char*[]){"pkill", "dwm", NULL}}},~ quit dwm
     - then run ~make clean install~
  13. now if you are using an laptop and want to enable natural scroling like me do the following
     - ~xinput list~ to find your touchpad name
     - ~xinput set-prop "your touchpad name" "libinput Natural Scrolling Enabled" 1~
     - to make it permanent create a file with ~sudo nvim /etc/X11/xorg.conf.d/40-libinput.conf~
     - paste this in the file 
       #+begin_src shell
       Section "InputClass"
         Identifier "libinput touchpad catchall"
         MatchIsTouchpad "on"
         MatchDevicePath "/dev/input/event*"
         Driver "libinput"
         Option "NaturalScrolling" "true"
       EndSection
       #+end_src
     - if you want it for mouse aswell also add
       #+begin_src shell
       Section "InputClass"
         Identifier "libinput pointer catchall"
         MatchIsPointer "on"
         MatchDevicePath "/dev/input/event*"
         Driver "libinput"
         Option "NaturalScrolling" "true"
       EndSection
       #+end_src
   14. *if you are using my config you can skip this step* for the fkeys add 
       - ~#include <X11/XF86keysym.h>~ after thedefine under the modkeys 
         * keybinds
           - ~{ 0,                       XF86XK_AudioMute,          spawn,          {SHCMD("pactl set-sink-mute 0 toggle")} },~
           - ~{ 0,                       XF86XK_AudioLowerVolume,   spawn,          {SHCMD("pactl set-sink-volume 0 -5%")} },~
           - ~{ 0,                       XF86XK_AudioRaiseVolume,   spawn,          {SHCMD("pactl set-sink-volume 0 +5%")} },~
           - ~{ 0,                       XF86XK_MonBrightnessDown,  spawn,          {SHCMD("brightnessctl set 5%-")} },~
           - ~{ 0,                       XF86XK_MonBrightnessUp,    spawn,          {SHCMD("brightnessctl set 5%+")} },~
         - then run ~sudo make clean install~
   15. now you can exit gnome and login to dwm with sddm
* Scren-tearing {ducking nvidia} [use picom even if not in nvidia]
if you get screen tearing of any kind download picom, nvidia-settings and make a
    1. ~sudo nvim .config/picom.conf~
       - add this in the file 
         #+begin_src shell
         backend="glx";
         vsync=true;
         fading=true; #if you have nvidia an the windows wigle first restart dwm just in case it bugs sometimes else set this to false
         fade-in-step=0.07;
         fade-out-step=0.07;
         fade-delta=10;
         mark-wmwin-focused=true;
         mark-ovredir-focused=true;
         detect-client-opacity=true;
         inactive-opacity=0.95;
         active-opacity=1.0;
         inactive-opacity-override=true;
         #+end_src
     2. and then inside the  /usr/local/bin/startdwm.sh before while loop add 
        - ~picom &~
     3. if you are using grub do this  ~sudo vim /etc/default/grub~
        - ~GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nvidia-drm.modeset=1"~
          #+begin_src shell
sudo grub-mkconfig -o /boot/grub/grub.cfg
          #+end_src
     4. also check the following file for nvidia cards again
        - ~sudo vim /etc/mkinitcpio.conf~
        - modules should have this options in them ~MODULES=(... nvidia nvidia_modeset nvidia_uvm nvidia_drm ...)~
     5. then create this file
        - ~sudo vim /etc/modprobe.d/nvidia.conf~
        - and add the following options ~nvidia_drm modeset=1 fbdev=1~
     6. then run
        #+begin_src shell
        sudo mkinitcpio -P
        #+end_src
        - if this files baucuase boot is full you will need either to expand it or re install arch with bigger boot partition
      7. then reboot system
* Customization

** How do I modify config.h?
config.h can be edited just like any other C source code file.
It contains definitions of variables that are going to be used by dwm.c 
and therefore it is vital that the file is always up to date. The default 
Makefile distributed with dwm will not overwrite your customised config.h 
with the contents of config.def.h, even if it was updated in the latest git pull.
Therefore, you should always compare your customised config.h with config.def.h 
and make sure you include any changes to the latter in your config.h.

** How do I modify config.mk?
config.mk can be edited just like any other text file.
It contains definitions of variables that are going to 
be used inside Makefile. Unlike config.h, config.mk does 
not have a config.def.mk (a default Makefile). Therefore,
during an update of your repository you may run into 
conflicts if the original config.mk is edited.

two good configs for ides are [[https://github.com/siduck/chadwm][chadwm]] and [[https://github.com/BreadOnPenguins/dwm][breadonpenguins dwm]]
  1. if you want to install a font for example my favorite monaspace radon [[https://github.com/githubnext/monaspace#monaspace][Download here]]
     - download the font and extract it
     - create a dir in 
       * ~sudo mkdir -p /usr/local/share/fonts/m~
     - copy the fonts there 
       * ~sudo cp ~/Downloads/monaspace-0.0.0/NerdFonts/Monaspace\ Radon/* /usr/local/share/fonts/m/~
     - then run ~fc-cache -fv~
     - change the font in config.h 
       * ~static const char *fonts[] = { "MonaspaceRadonNF:size=14" };~
     - then run ~sudo make clean install~
     - and reboot system
  2. open aplication in specific workspace
     - go to config.h and add in rules section for example for firefox
       * ~{ "Vivaldi-stable",  NULL,       NULL,       1 << 0,       0,           -1 },~
     - then run ~sudo make clean install~
     - now firefox will open in workspace 1
     - or for kitty terminal
       * ~{ "kitty",  NULL,       NULL,       1 << 1,       0,           -1 },~
     - then run ~sudo make clean install~
   3. make custom open commands example rofi 
        - go to config.h and add in commands section
          * ~static const char *rofi[] = { "rofi", "-show", "drun", "-theme", "~~/.config/rofi/config.rasi" NULL };~
        - then in keybinds section add
          * ~{ MODKEY,                       XK_d,          spawn,          {.v = rofi } },~
        - then run ~sudo make clean install~
          
if we don't want any window class to be treated in a special way, we need to 
initialize rules with at least one element:
#+begin_src shell
static Rule rules[] = {
	/* class      instance    title       tags mask     isfloating   monitor */
	{ NULL,       NULL,       NULL,       0,            False,       -1 },
};
#+end_src

** Patches 
Patches are custom codes from dwm users to make dwm better {less patches == less change it breaks and its more stable} but if you want to add some cool features you can use them
how to use them 
*Note that many patches make changes config.def.h instead of config.h. Either move those changes also to config.h, or add rm config.h to the clean target in the Makefile.*
  1. go to [[https://dwm.suckless.org/patches/][patches site]] and find the patch you want
  2. download the patch file
  3. go to your dwm dir in .config/dwm
  4. crate a patches dir with ~mkdir patches~
  5. move your patches or install them there
  6. run ~patch -p1 < /path/to/patch/file~
     - bettter way to be able to check for errors undo patches etc is to use 
       * ~git apply --check --verbose /path/to/patch/file~
         - --check will see what will happen if we apply the patch so if we have an error we can see it
         - if you get an error change --check to --reject and it will create a .rej file with the changes that didnt apply so you can manually add them to the config.h
  7. if it gives you an error read it carefully and see what is wrong usually its a missing ; or , or something small
  8. then run ~sudo make clean install~
  9. then restart dwm with super+shift+r
    
- *When patching i recommend to have 2 backups 1 of the original dwm so you can see where the the diff correct locations are meant to go and a 2 one that you will make after each patch so if something breaks you can go back to the last working version*
  
- *You should first make patches that change major behaivor of the wm and then visual ones since visual once have less change of breaking and are less important*
    
*** my patches listed by priority
+ ✔️ == used
+ ❌ == not used
***** Alternative/extra to the ones billow
- https://dwm.suckless.org/patches/xresources/ ❌ #merge .xresources on start alternative to xrdb patch with extra that you can cange more stuff then just colors
- https://dwm.suckless.org/patches/windowfollow/ ❌ #alternative window following behavior to viewontag patch
- https://dwm.suckless.org/patches/mpdcontrol/ #mpd server controls for keybinds
- https://dwm.suckless.org/patches/decoration_hints/ #make dwm respect if some apps dont want borders cause it can cause issues like vlv, chromium, etc
- https://dwm.suckless.org/patches/canfocusfloating/ ❌ #skip floating windows when you cycle focus when enabled
- https://dwm.suckless.org/patches/tag-previews/ ❌ #preview workspaces by hovering dwm bar with mouse or dwmblocks bar {dosent work with polybar or non dwmbars}
- https://dwm.suckless.org/patches/notitle/ #no titlebar
- https://dwm.suckless.org/patches/moveontagmon/ #move floating window if monitor is changed
- https://dwm.suckless.org/patches/floatrules/ ❌ #more advanced floating rules {can be nice if you dont use the center floating patch}
- https://dwm.suckless.org/patches/defaulttag/ #change the default tag dwm opens when it starts
- https://dwm.suckless.org/patches/colorschemes/ ❌ #alternative to xrdb and xresources patch to change colorschemes with a keybind from preset ones
- https://dwm.suckless.org/patches/smartborders/ ❌ #no borders when only one window is open

***** Both laptop and desktop
- https://dwm.suckless.org/patches/gaplessgrid/ ✔️ OR https://dwm.suckless.org/patches/gridmode/ ❌ OR https://dwm.suckless.org/patches/nrowgrid/ ❌ #Grid layout for windows
- https://dwm.suckless.org/patches/attachaside/ ✔️ #when using tiled layout keep master window as master
- https://dwm.suckless.org/patches/ewmhtags/ ✔️ AND https://dwm.suckless.org/patches/anybar/ ✔️ #make polybar work
- https://dwm.suckless.org/patches/scratchpad/ ✔️ ️#open a terminal with super+shift+enter that floats and is always on top
- https://dwm.suckless.org/patches/focusadjacenttag/ ✔️ OR https://dwm.suckless.org/patches/stacker/ ✔️ OR https://dwm.suckless.org/patches/movestack/ ❌ #focus window left/right or swap them
- https://dwm.suckless.org/patches/viewontag/ ✔️ #follow the window to the send tag 
- https://dwm.suckless.org/patches/actualfullscreen/ ✔️ #fullscreen your window
- https://dwm.suckless.org/patches/preventfocusshift/ ✔️ #exit fullscreen when you open a new window
- https://dwm.suckless.org/patches/tiledmove/ ✔️ #move windows with mouse but keep them tiled
- https://dwm.suckless.org/patches/sticky/ ✔️ #make a window sticky so it shows in all workspaces
- https://dwm.suckless.org/patches/alttab2/ ✔️ #alt tab like in windows
- https://dwm.suckless.org/patches/center/ ❌ OR https://dwm.suckless.org/patches/togglefloatingcenter/ ✔️ #open floating windows in the center of the screen first uses a rule secont always does it for all floating windows

****** nice but not required 
- https://dwm.suckless.org/patches/xrdb/ ✔️ #merge .Xresources on start so you can change colors without recompiling like if you use [[https://github.com/eylles/pywal16][pywal]]
- https://dwm.suckless.org/patches/preserveonrestart/ ❌ {need to try it with restartsig} OR https://dwm.suckless.org/patches/restoreafterrestart/ ❌ #remember open windows and their tags on restart
- https://dwm.suckless.org/patches/restartsig/ ❌ #restart dwm without quitting it {here since my script can do it already but meabe some patch might need it to work}
- https://dwm.suckless.org/patches/cool_autostart/ ❌ OR https://dwm.suckless.org/patches/autostart/ ❌ #run a script on dwm start for example to set a wallpaper with feh, start pipewire, set xkbmap etc {its in nice but not required cause i think the startdwm.sh script can do what this does already *second one might be worth it tho since it gives you some nice options*}
- https://dwm.suckless.org/patches/vanitygaps/ ❌ OR https://dwm.suckless.org/patches/uselessgap/ ✔️ OR https://dwm.suckless.org/patches/functionalgaps/ ❌ OR  #gaps between windows
- https://dwm.suckless.org/patches/fadeinactive/ ❌ OR https://dwm.suckless.org/patches/clientopacity/  ❌ #fade inactive windows {picom does it already}

***** Desktop only
- https://dwm.suckless.org/patches/focusmonmouse/ #moves mouse to selected monitor {basicly a fix for multimonitor setups}
- https://dwm.suckless.org/patches/fixmultimon/ #if mouse goes to another monitor dont change focus to that monitor {basicly a fix for multimonitor setups}
- https://dwm.suckless.org/patches/torus/ #no matter what edge the mouse lives it goes to the other screen edge {i am not sure if it will work for more then 2 monitors}
- https://dwm.suckless.org/patches/autostarttags/ #open specific apps in specific workspaces on start { its here cause if you have 1 monitor it can be annoying to have apps open in workspaces you cant see}
- https://dwm.suckless.org/patches/single_tagset/ #only one tagset for all monitors instead of multiple ones

***** Laptop only
****** swipe gestures for workspace switching
******* Install libinput-gestures:
#+begin_src shell
# Install dependencies
sudo pacman -S libinput wmctrl xdotool

# Install libinput-gestures from AUR
yay -S libinput-gestures

#+end_src

******* Add yourself to input group:
#+begin_src shell
sudo usermod -a -G input $USER

#+end_src

******* Create gesture configuration:
#+begin_src shell
# Create config file
nvim ~/.config/libinput-gestures.conf

#+end_src

Add this configuration:
#+begin_src shell
# 3-finger swipe gestures for DWM tag switching
# Swipe right (3 fingers) = go to next tag (right workspace)
# Swipe left (3 fingers) = go to previous tag (left workspace)  
gesture swipe left 3 xdotool key --clearmodifiers super+ctrl+bracketleft
gesture swipe right 3 xdotool key --clearmodifiers super+ctrl+bracketright

#+end_src

******* Configure DWM for workspace cycling:
For proper tag cycling, apply this function to your DWM:
#+begin_src c
// Add this function to dwm.c
// under static void spawnbar(); add:
static void shiftview(const Arg *arg);
// and under void spawnbar(){ ... } add:
void
shiftview(const Arg *arg) {
    Arg shifted;
    if(arg->i > 0) // left circular shift
        shifted.ui = (selmon->tagset[selmon->seltags] << arg->i)
           | (selmon->tagset[selmon->seltags] >> (LENGTH(tags) - arg->i));
    else // right circular shift
        shifted.ui = selmon->tagset[selmon->seltags] >> (- arg->i)
           | selmon->tagset[selmon->seltags] << (LENGTH(tags) + arg->i);
    view(&shifted);
}

// Add to your key bindings config.h:
{ MODKEY,              XK_Right,  shiftview,      {.i = +1} },
{ MODKEY,              XK_Left,   shiftview,      {.i = -1} },

#+end_src

******* Start libinput-gestures:
#+begin_src shell
# Start the service
libinput-gestures-setup start

# Enable it to start automatically
libinput-gestures-setup autostart

# If you make a change then run 
libinput-gestures-setup restart

# tou can check if they work by running 
libinput-gestures -d

# Check status
libinput-gestures-setup status

#+end_src

- *if start dint work you might need to log out and back in or reboot and also run sudo usermod -a -G input $USER again*

- *To make the 2 x11 idle scripts to work you will need to edit the home path since to work it needs to be hard coded so from the /home/dwm-test that is currently set make it home/your_name if you dont know how to type exactly your home name in the terminal do ~cd~ and ~pwd~ to see the exact way it is written and ofcorse you will need to also fix the keybind inside dwm in the config.h*

*** pywall {wallpaper and colorscheme generator}
**** links
- [[https://github.com/eylles/pywal16][pywal]]
- [[https://github.com/eylles/pywal-extra][pywal extras]]
- [[https://github.com/BreadOnPenguins/scripts][BreadOnPenguins scripts]]
- [[https://github.com/BreadOnPenguins/dots][Breadonpenguins dots]]
- [[https://www.youtube.com/watch?v=O5VVdFWJcak][BreadOnPenguins pywal video]]

**** notes 

**** config

*** poybar {status bar}
**** links
- [[https://github.com/polybar/polybar/wiki][polybar wiki]]
- [[https://polybar.readthedocs.io/en/stable/][polybar docs]]
- [[https://www.reddit.com/r/Polybar/][polybar theme ideas]]
- [[https://github.com/adi1090x/polybar-themes][polybar themes]]
- [[https://github.com/Murzchnvok/polybar-collection][more polybar themes]]
- [[https://gitlab.com/urielzo/polybar-theme/-/tree/main][even more polybar themes]]
- [[https://github.com/polybar/polybar-scripts][polybar scripts]]

**** notes 
- this might be usefull with polybar for weather widget 
- ~curl wttr.in/athens-greece~
- [[https://www.youtube.com/watch?v=3mGgJbqQLNM][example]]


*** dmenu {app and script launcher} ✔️
**** links
- [[https://tools.suckless.org/dmenu/][dmenu docs]] # i reccomend downloading my dmenu from here and building it like dwm so the scripts never break
- [[https://tools.suckless.org/dmenu/patches/][dmenu patches]]
- [[https://tools.suckless.org/dmenu/scripts/][suckless dmenu scripts]]
- [[https://github.com/BreadOnPenguins/scripts][BreadOnPenguins scripts]]
- [[https://www.youtube.com/watch?v=4JWeU78A95c][BreadOnPenguins dmenu scripts video]]
- [[https://www.youtube.com/watch?v=h_E3ddNQ1xw][BreadOnPenguins dmenu old but usfule still video]]
- [[https://www.youtube.com/watch?v=6NeEJVghF_k][BreadOnPenguins dmenu+clipboard]]
- [[https://www.reddit.com/r/unixporn/comments/siynct/suckless_fully_integrated_themes_across_dwm_st/][idea for alternative to pywal]]
- [[https://github.com/debxp/dmenu-scripts][dmenu scripts]]
- [[https://github.com/nsbgn/scripts][more dmenu scripts]]
- [[https://gitlab.com/dwt1/dmscripts][even more dmenu scripts]]

**** patches
******* Used
- https://tools.suckless.org/dmenu/patches/center/ ✔️ #center dmenu with a flag
- https://tools.suckless.org/dmenu/patches/grid/ ✔️ and https://tools.suckless.org/dmenu/patches/gridnav/ ✔️ and  https://tools.suckless.org/dmenu/patches/no-default-select/ ✔️ #add a grid layout nad navigation for it
- https://tools.suckless.org/dmenu/patches/numbers/ ✔️ #total and matched items number 
- https://tools.suckless.org/dmenu/patches/fuzzymatch/ ✔️ and https://tools.suckless.org/dmenu/patches/fuzzyhighlight/ ✔️ #fuzzy matching and highting
- https://tools.suckless.org/dmenu/patches/dmenupadding/ ✔️ #a bit more powerfull padding
- https://tools.suckless.org/dmenu/patches/xresources-alt/ ✔️ OR https://tools.suckless.org/dmenu/patches/xresources/ ❌ #Use xresources colors {pywal}
- https://tools.suckless.org/dmenu/patches/border/ ✔️ #gives a border like the window border
- https://tools.suckless.org/dmenu/patches/no-input/ ✔️ #add a flag to remove input field in scripts
- https://tools.suckless.org/dmenu/patches/date/ ✔️ #add the date in dmenu
- https://tools.suckless.org/dmenu/patches/qalc/ ✔️ #calc mode using flag in dmenu

******* Could be good but not used
- https://tools.suckless.org/dmenu/patches/case-insensitive/ ❌ #Case-insensitive
- https://tools.suckless.org/dmenu/patches/png_images/ ❌ #preview images in clipboard mode
- https://tools.suckless.org/dmenu/patches/preselect/ ❌ #preselct input to create stuff like in the example
- https://tools.suckless.org/dmenu/patches/alpha/ ❌ #transparency {adds to much code and can break stuff}
- https://tools.suckless.org/dmenu/patches/json/ ❌ #suport simple json files as input 
- https://tools.suckless.org/dmenu/patches/line-height/ ❌ #better pudding
- https://tools.suckless.org/dmenu/patches/mouse-support/ ❌ #add mouse support 
- https://tools.suckless.org/dmenu/patches/xyw/ ❌ #alternative more powerful center with specified positions instead but much slower 
- https://tools.suckless.org/dmenu/patches/scroll/ ❌ #makes the input text scroll-able

**** Scripts
******* Used
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_audioswitch_prev ✔️ #audio manu picker
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_sys ✔️ #dmenu restart kill close picker
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_mpv ✔️ #video picker using mpv
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-weather?ref_type=heads ✔️ #get weather
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-websearch?ref_type=heads ✔️ #web search 
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-wifi?ref_type=heads ✔️ #wifi picker 
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-man?ref_type=heads ✔️ #man pages
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-dictionary?ref_type=heads ✔️ #dictionary
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-wiki?ref_type=heads ✔️ #arch wiki
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-eq-profiles?ref_type=heads ✔️ #sound equalizer profiles
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-documents?ref_type=heads ✔️ #pdf opener
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-sounds?ref_type=heads ✔️ #white noise
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-pipewire-out-switcher?ref_type=heads ✔️ #audio output picker
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-spellcheck?ref_type=heads ✔️ #spellcheck
- and many more custom ones

******* Could be good but not used
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-colpick?ref_type=heads ❌ #color picker
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-setbg?ref_type=heads ❌ #wallpaper picker {need xwallpaper and sxiv}
- https://gitlab.com/dwt1/dmscripts/-/blob/master/scripts/dm-music?ref_type=heads ❌ #Music player{need mpd and mpc}
- http://efe.kim/files/scripts/dmenu_websearch ❌ #web search
- https://github.com/cdown/clipmenu ❌ #Clipboard for dmenu
- https://codeberg.org/NRK/mpv-toolbox/src/branch/master/mdmenu ❌ OR https://github.com/nsbgn/scripts/blob/master/dmenu-mpv ❌ #mpv controls with dmenu
- https://github.com/cdown/mpdmenu ❌ #mpd controls with dmenu
- https://codeberg.org/mehrad/dmenu_shot ❌ #dmenu flameshot to imagemack screen shot tool
- https://github.com/NikitaIvanovV/dmenu-translate ❌ #dmenu translate
- https://tools.suckless.org/dmenu/scripts/dbdb.sh ❌ OR  https://github.com/amarakon/dfm ❌ #Dmenu directory browser 
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_cliphist ❌ #alternative clip hist using xclip
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_musicpicker ❌ #music picker using mpc
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_tempconvert ❌ #temp c-f conterter
- https://github.com/BreadOnPenguins/scripts/blob/master/dmenu_timer ❌ #timer
- https://github.com/debxp/dmenu-scripts/blob/master/dmenu-websearch ❌ and https://github.com/debxp/dmenu-scripts/blob/master/dmenu-websearch-sources ❌ #web serach


*** Slock {lock screen} ✔️
**** links 
- [[https://tools.suckless.org/slock/][slock website]]
- [[https://tools.suckless.org/slock/patches/][slock patches]]
- [[https://www.reddit.com/r/unixporn/comments/momw76/slock_high_performance_blur_effect_for_suckless/][simple slock example]]

**** notes 

**** patches
******* Used
- https://tools.suckless.org/slock/patches/user/ ✔️ #use the $USER instead of specific group and user
- https://tools.suckless.org/slock/patches/auto-timeout/ ❌ OR https://tools.suckless.org/slock/patches/dpms/ ✔️ #screen automaticly closes after n amount of time if slock is active
- https://tools.suckless.org/slock/patches/mediakeys/ ❌ OR https://tools.suckless.org/slock/patches/passthrough/ ✔️ #allow some keybinds to work even when locked
- https://tools.suckless.org/slock/patches/quickcancel/ ✔️ #stop screen from locking withen a period of time
- https://tools.suckless.org/slock/patches/xresources/ ✔️ #use xresources for colors {pywal}
- https://tools.suckless.org/slock/patches/noxbell/ ✔️ #lets you disable the bell sound when you use a wrong pass
- https://tools.suckless.org/slock/patches/foreground-and-background/ ✔️ #makes your background blured or pixalated and uses a dwm logo for displaying colors for inputs instead of the whole screen OR https://tools.suckless.org/slock/patches/background-image/ ❌ #use an image as a background
- https://tools.suckless.org/slock/patches/capscolor/ ✔️ #add an extra color if capslock is enabled 
- https://tools.suckless.org/slock/patches/message/ ❌ OR https://tools.suckless.org/slock/patches/colormessage/ ❌ #put a message in the lockscreen

******* Could be good but not used
- https://tools.suckless.org/slock/patches/blur-pixelated-screen/ ❌ #blurs or pixalated background for lock screen
- https://tools.suckless.org/slock/patches/dwmlogo/ ❌ #use the dwm logo to dislay inputs instead of the whole screen 
- https://tools.suckless.org/slock/patches/alternate-colors/ ❌ #use more alternative colors when typing
- https://tools.suckless.org/slock/patches/squares/ ❌ #use scuares for background instead of solid color

*** picom {compositor} ✔️
**** links
- [[https://picom.app][picom docs]]
- [[https://wiki.archlinux.org/title/Picom][arch wiki picom]]
- [[https://github.com/BreadOnPenguins/dots][Breadonpenguins dots]]
- [[https://www.youtube.com/watch?v=zRUe9fCs7Qs][BreadOnPenguins picom ideo]]

**** notes 
- there is an example script in 
- ~/etc/xdg/picom.conf~
  
+ Multihead
-  If a [[https://wiki.archlinux.org/title/Multihead][multihead]] configuration is used without xinerama - meaning that X server is started with more than one screen - then picom will start on only one screen by default. It can be started on all screens by using the DISPLAY environment variable. For example, to run on X screen 0 in the background:

 ~DISPLAY=":0" picom -b~
- The above should work on all monitors. If it does not then try an older method that manually specifies each display:

~seq 0 3 | xargs -l1 -I@ picom -b -d :0.@~

- Screen sharing
- A shadowed overlay on screen sharing and shadows of Zoom Meetings pop-up windows might be avoided by adding the following to shadow-exclude.
#+begin_src shell
shadow-exclude = [
  "name = 'cpt_frame_xcb_window'",
  "class_g ?= 'zoom'",
];
Blurred screen sharing is disabled by adding Zoom Meetings to blur-background-exclude with

blur-background-exclude = [
  "class_g ?= 'zoom'",
];

#+end_src

- For Microsoft Teams, the red border around the shared content is implemented with a mostly transparent window. Having blur enabled makes it impossible to work with and should be disabled as follows:
#+begin_src shell
shadow-exclude = [
  "name = 'rect-overlay'",
];

blur-background-exclude = [
  "name = 'rect-overlay'",
];

#+end_src

*** Dunst {notification daemon} ✔️
**** links
- [[https://github.com/BreadOnPenguins/dots][Breadonpenguins dots]]
- [[https://dunst-project.org/documentation/][dunst website]]

** Main packages for the config to work {plus the obove ones for nvidia and install}
*check the githubs/sites for install instructions*
 - dwm ~
 - polybar 
 - dmenu ✔️
 - picom ✔️
 - cmake {to build}
 - pywal16 {install with} to try wal you do wal -i /path/to/image --backend {wal or modern_colorthief or colorthief or haishoku or colorz} [[https://www.youtube.com/watch?v=O5VVdFWJcak][BreadOnPenguins pywal video]]
 - pipx {to install pywal16 backends and other python apps} ~pipx install "pywal16[all]"~ to install the backends ✔️
 #+begin_src shell
pipx install -e "pywal16[modern_colorthief,colorthief,haishoku,colorz]"
pipx ensurepath
 #+end_src
 - feh {wallpaper setter works with pywall} ✔️
 - dunst/notify-send/libnotify {dunst recives notifications and notify sends them and libnotify is a dependacy} [[https://www.youtube.com/watch?v=cBx9P3bvDCk][example]] {notify-send is inside libnotify}✔️
 - rofi ✔️
 - greenclip and xclip {clipboard manager} {grenclip install with yay greenclip-rofi} ✔️
 - slock/xautolock {[[https://www.reddit.com/r/unixporn/comments/momw76/slock_high_performance_blur_effect_for_suckless/][simple slock example]]}, [[https://tools.suckless.org/slock/patches/][slock patches]] {xautolock automaticly locks scren and calls slock install with yay } ✔️
 - mpd and mpc and mpv {thinking about it might change to sth else} [[https://www.youtube.com/watch?v=6EAID9yopIE][example]] ✔️
 - imagemagick {screenshot tools that helps pywall pic colors} [[https://www.youtube.com/watch?v=_qSgTc97bzk&t=27s][example]]
 - libinput-gestures  *if on laptop* ✔️
 - menu-qalc and rofi-calc {calc for dmenu} ~yay -S menu-qalc rofi-calc~ ✔️
 - sddm-theme  https://github.com/JaKooLit/simple-sddm-2, https://www.google.com/search?q=cyber+grub+theme&oq=cyver+grub+&sourceid=chrome&ie=UTF-8
 - grub-theme  https://www.gnome-look.org/p/1420727

* Personal stuff 
- apps 
#+begin_src shell
  gvfs-mtp 
  gvfs-gphoto2
  vivaldi-ffmpeg-codecs
  msty-bin
  typescript-language-server
  tailwindcss-language-server
  # morgen-bin
  clang
  cppdap
  ddcutil
  debugedit
  ebook-tools
  fontconfig
  fuzzel
  go-tools
  gradle
  grep
  gzip
  ldb
  lld
  llvm
  lmdb
  make
  mariadb
  mariadb-clients
  mariadb-libs
  ninja
  perl
  playerctl
  sassc
  sqlite
  typescript
  yarn
  ydotool
  zig
  unzip
  vivaldi
  neovim
  fish
  libvips
  lua
  go
  rust
  7zip
  zram-generator
  xdg-utils
  xmake
  wpa_supplicant
  vim
  unrar
  ueberzug
  # sqlitebrowser
  rz-cutter
  ruby
  rofi
  retroarch-assets-xmb
  retroarch-assets-ozone
  retroarch-assets-glui
  retroarch
  renderdoc
  raylib
  python
  python-pytest-mpl
  python-pygments
  python-pipx
  python-pip
  python-pandas
  python-matplotlib
  python-ipympl
  premake
  network-manager-applet
  netctl
  love
  less
  kate
  jre-openjdk
  htop
  grub
  flatpak
  fisher
  feh
  base
  ark
  amberol
  perl-image-exiftool
  mediainfo
  zip
  gnome-epub-thumbnailer
  imagemagick
  zoxide
  ripgrep
  fd
  jq
  p7zip
  ffmpeg
  yazi
  trash-cli
  atuin
  docker
  docker-compose
  ollama
  gutenprint
  system-config-printer
  cups
  cups-pdf
  zed
  lutris
  git
  lazygit
  gnome-disk-utility
  gwenview
  fastfetch
  btop
  wine
  wine-mono
  wine-gecko
  winetricks
  nodejs
  npm
  vlc
  fzf
  tldr
  lsd
  bat
  dolphin
  thunar
  nautilus
  audacity
  blender
  cmake
  cool-retro-term
  discord
  fbreader
  gimp
  godot
  flameshot
  gparted
  krita
  inkscape
  kitty
  libreoffice
  lmms
  eclipse-clp
  swi-prolog
  projog
  lolcat
  # mysql
  # mysql-workbench
  obsidian
  steam
  okular
  thunderbird
  tiled
  wacomtablet
  lldb
  mingw-w64-winpthreads
  mingw-w64-headers
  mingw-w64-crt
  mingw-w64-gcc
  mingw-w64
  mingw-w64-binutils
  starship
  mingw-w64-gcc
  mingw-w64
  mingw-w64-binutils
  pokemon-colorscripts-git
  docker-desktop
  cnijfilter2
  scangearmp2
  cht.sh-git
  nodejs-live-server 
  zen-browser-bin
  oterm
  oatmeal-bin
  heroic-games-launcher-bin
  bolt-launcher
  vesktop
  raylib-cpp-git
  mingw-w64-raylib
  playonlinux
  csharp-ls
  jdk
  jdk17-openjdk
  jdk21-openjdk
  jdk-openjdk
  openjdk-src
  sublime-text-4
  betterdiscord-git
  bottles
  beeref
  cavalier
  famistudio-bin
  nodejs
  gitkraken
  koodo-reader-bin
  stremio
  wacom-settings
  webex-bin
  youtube-dl-gui
  lib32-vulkan-tools
  nodejs-live-server
  opentabletdriver
  libvips
  raylib-cpp-git
  mingw-w64-raylib
  aseprite
  # github-desktop
#+end_src
